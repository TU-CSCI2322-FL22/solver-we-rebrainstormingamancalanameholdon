module Testing where

import Solver
import Mancala
import Data.Maybe

-- Test states:
loadedboard = (Player1, Board 22 [(1,11),(2,11),(3,11),(4,11),(5,11),(6,11)] 22 [(7,22),(8,22),(9,22),(10,22),(11,22),(12,22)])
deadboard = (Player1, Board 0 [(1,0),(2,0),(3,0),(4,0),(5,0),(6,0)] 0 [(7,2000000),(8,0),(9,0),(10,0),(11,0),(12,1)])
identityboard = (Player1, Board 22 [(1,1),(2,2),(3,3),(4,4),(5,5),(6,6)] 22 [(7,7),(8,8),(9,9),(10,10),(11,11),(12,12)])
deadboard2 = (Player2, Board 0 [(1,0),(2,0),(3,0),(4,0),(5,0),(6,0)] 0 [(7,2000000),(8,0),(9,0),(10,0),(11,0),(12,1)])


p1board = (Player1, Board 0 [(1,0),(2,0),(3,0),(4,0),(5,0),(6,1)] 0 [(7,2),(8,0),(9,0),(10,0),(11,0),(12,1)])
p2board = (Player2, Board 0 [(1,0),(2,0),(3,0),(4,0),(5,1),(6,0)] 0 [(7,0),(8,0),(9,0),(10,0),(11,0),(12,1)])

whatever = (Player1, Board 0 [(1,0),(2,0),(3,0),(4,0),(5,1),(6,0)] 0 [(7,0),(8,0),(9,0),(10,0),(11,1),(12,0)])
whatever2 = (Player2, Board 0 [(1,0),(2,0),(3,0),(4,0),(5,1),(6,0)] 0 [(7,0),(8,0),(9,0),(10,0),(11,1),(12,0)])
whatever3 = (Player1, Board 0 [(1,0),(2,0),(3,0),(4,0),(5,1),(6,0)] 0 [(7,0),(8,0),(9,0),(10,0),(11,0),(12,1)])

startboard = (Player1,Board {store1 = 0, holes1 = [(1,0),(2,5),(3,5),(4,5),(5,5),(6,4)], store2 = 1, holes2 = [(7,4),(8,0),(9,1),(10,6),(11,6),(12,6)]})

p2win = (Player1,Board {store1 = 16, holes1 = [(1,0),(2,0),(3,0),(4,0),(5,0),(6,0)], store2 = 19, holes2 = [(7,2),(8,0),(9,1),(10,0),(11,0),(12,10)]})

p2willwin = (Player1,Board {store1 = 15, holes1 = [(1,0),(2,0),(3,0),(4,0),(5,0),(6,1)], store2 = 19, holes2 = [(7,2),(8,0),(9,1),(10,0),(11,0),(12,10)]})

evenly = (Player1,Board {store1 = 1, holes1 = [(1,0),(2,5),(3,1),(4,6),(5,6),(6,5)], store2 = 1, holes2 = [(7,0),(8,5),(9,1),(10,6),(11,6),(12,5)]})

move16 = (Player1,Board {store1 = 13, holes1 = [(1,0),(2,2),(3,0),(4,1),(5,3),(6,2)], store2 = 14, holes2 = [(7,2),(8,1),(9,0),(10,0),(11,1),(12,9)]})

move9 = (Player1,Board {store1 = 12, holes1 = [(1,0),(2,0),(3,2),(4,7),(5,0),(6,0)], store2 = 10, holes2 = [(7,0),(8,0),(9,3),(10,8),(11,0),(12,6)]})

move12 = (Player2,Board {store1 = 13, holes1 = [(1,0),(2,0),(3,0),(4,0),(5,2),(6,1)], store2 = 10, holes2 = [(7,1),(8,1),(9,1),(10,10),(11,2),(12,7)]})

